CROSS_COMPILE=arm-none-eabi-
QEMU_STM32 ?= ../qemu_stm32/arm-softmmu/qemu-system-arm

ARCH=CM3
VENDOR=ST
PLAT=STM32F10x
LIB_PATH=../../Lab-8/freertos/libraries
CMSIS_LIB=$(LIB_PATH)/CMSIS/$(ARCH)
STM32_LIB=$(LIB_PATH)/STM32F10x_StdPeriph_Driver

CMSIS_PLAT_SRC = $(CMSIS_LIB)/DeviceSupport/$(VENDOR)/$(PLAT)

FREERTOS_SRC = $(LIB_PATH)/FreeRTOS
FREERTOS_INC = $(FREERTOS_SRC)/include/                                       
FREERTOS_PORT_INC = $(FREERTOS_SRC)/portable/GCC/ARM_$(ARCH)/

GRASP_SRC = grasp_recorder/src
GRASP_INC = grasp_recorder/include

all: main.bin

#main.bin: main.c 
#	$(CROSS_COMPILE)gcc \
#		-Wl,-Tmain.ld -nostartfiles \
#		-I. -I$(FREERTOS_INC) -I$(FREERTOS_PORT_INC) \
#		-I$(LIB_PATH)/CMSIS/CM3/CoreSupport \
#		-I$(LIB_PATH)/CMSIS/CM3/DeviceSupport/ST/STM32F10x \
#		-I$(LIB_PATH)/STM32F10x_StdPeriph_Driver/inc \
#		-fno-common -O0 \
#		-gdwarf-2 -g3 \
#		-mcpu=cortex-m3 -mthumb \
#		-o main.elf \
#		\
#		$(CMSIS_LIB)/CoreSupport/core_cm3.c \
#		$(CMSIS_PLAT_SRC)/system_stm32f10x.c \
#		$(CMSIS_PLAT_SRC)/startup/gcc_ride7/startup_stm32f10x_md.s \
#		$(STM32_LIB)/src/stm32f10x_rcc.c \
#		$(STM32_LIB)/src/stm32f10x_gpio.c \
#		$(STM32_LIB)/src/stm32f10x_usart.c \
#		$(STM32_LIB)/src/stm32f10x_exti.c \
#		$(STM32_LIB)/src/misc.c \
#		\
#		$(FREERTOS_SRC)/croutine.c \
#		$(FREERTOS_SRC)/list.c \
#		$(FREERTOS_SRC)/queue.c \
#		$(FREERTOS_SRC)/tasks.c \
#		$(FREERTOS_SRC)/portable/GCC/ARM_CM3/port.c \
#		$(FREERTOS_SRC)/portable/MemMang/heap_1.c \
#		\
#		-I$(FREERTOS_SRC) \
#		-I$(GRASP_INC) \
#		-I$(GRASP_INC)/../ \
#		$(GRASP_SRC)/os_log.c \
#		$(GRASP_SRC)/../os_log_port.c \
#		syscalls.c \
#		\
#		stm32_p103.c \
#		main.c
#	$(CROSS_COMPILE)objcopy -Obinary main.elf main.bin
#	$(CROSS_COMPILE)objdump -S main.elf > main.list


main.bin: main.c 
	$(CROSS_COMPILE)gcc \
		-Wl,-Tmain.ld -nostartfiles \
		-I. -I$(FREERTOS_INC) -I$(FREERTOS_PORT_INC) \
		-I$(LIB_PATH)/CMSIS/CM3/CoreSupport \
		-I$(LIB_PATH)/CMSIS/CM3/DeviceSupport/ST/STM32F10x \
		-I$(LIB_PATH)/STM32F10x_StdPeriph_Driver/inc \
		-fno-common -O0 \
		-gdwarf-2 -g3 \
		-mcpu=cortex-m3 -mthumb \
		-o main.elf \
		\
		$(CMSIS_LIB)/CoreSupport/core_cm3.c \
		$(CMSIS_PLAT_SRC)/system_stm32f10x.c \
		$(CMSIS_PLAT_SRC)/startup/gcc_ride7/startup_stm32f10x_md.s \
		$(STM32_LIB)/src/stm32f10x_rcc.c \
		$(STM32_LIB)/src/stm32f10x_gpio.c \
		$(STM32_LIB)/src/stm32f10x_usart.c \
		$(STM32_LIB)/src/stm32f10x_exti.c \
		$(STM32_LIB)/src/misc.c \
		\
		$(FREERTOS_SRC)/croutine.c \
		$(FREERTOS_SRC)/list.c \
		$(FREERTOS_SRC)/queue.c \
		$(FREERTOS_SRC)/tasks.c \
		$(FREERTOS_SRC)/portable/GCC/ARM_CM3/port.c \
		$(FREERTOS_SRC)/portable/MemMang/heap_1.c \
		\
		-I$(FREERTOS_SRC) \
		syscalls.c \
		\
		stm32_p103.c \
		main.c
	$(CROSS_COMPILE)objcopy -Obinary main.elf main.bin
	$(CROSS_COMPILE)objdump -S main.elf > main.list


qemu: main.bin $(QEMU_STM32)
	$(QEMU_STM32) -M stm32-p103 -kernel main.bin

qemudbg: main.bin $(QEMU_STM32)
	$(QEMU_STM32) -M stm32-p103 \
		-gdb tcp::3333 -S \
		-kernel main.bin


qemu_remote: main.bin $(QEMU_STM32)
	$(QEMU_STM32) -M stm32-p103 -kernel main.bin -vnc :1

qemudbg_remote: main.bin $(QEMU_STM32)
	$(QEMU_STM32) -M stm32-p103 \
		-gdb tcp::3333 -S \
		-kernel main.bin \
		-vnc :1

qemu_remote_bg: main.bin $(QEMU_STM32)
	$(QEMU_STM32) -M stm32-p103 \
		-kernel main.bin \
		-vnc :1 &

qemudbg_remote_bg: main.bin $(QEMU_STM32)
	$(QEMU_STM32) -M stm32-p103 \
		-gdb tcp::3333 -S \
		-kernel main.bin \
		-vnc :1 &

emu: main.bin
	bash emulate.sh main.bin

qemuauto: main.bin gdbscript
	bash emulate.sh main.bin &
	sleep 1
	$(CROSS_COMPILE)gdb -x gdbscript&
	sleep 5
	python gdbtovcd.py

qemuauto_remote: main.bin gdbscript
	bash emulate_remote.sh main.bin &
	sleep 1
	$(CROSS_COMPILE)gdb -x gdbscript&
	sleep 5
	python gdbtovcd.py


clean:
	rm -f *.elf *.bin *.list
